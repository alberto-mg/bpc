   0  $accept : statements $end

   1  statements : statement NEWLINE
   2             | statement NEWLINE statements

   3  statement : type ID
   4            | ID LEFT val
   5            | io
   6            | MENTRE conditions ALLORA LEFTBRKT NEWLINE statements RIGHTBRKT
   7            | SE conditions ALLORA LEFTBRKT NEWLINE statements RIGHTBRKT else
   8            |

   9  else : ALTRIMENTI LEFTBRKT NEWLINE statements RIGHTBRKT
  10       |

  11  conditions : condition logicop conditions
  12             | condition

  13  condition : val compare val

  14  operation : mathop val val

  15  io : READ RIGHT ID
  16     | WRITE LEFT val

  17  val : ID
  18      | value
  19      | operation

  20  type : INTERO
  21       | REALE
  22       | CARATTERE
  23       | STRINGA

  24  value : NUMINT
  25        | NUMDBL
  26        | CHAR
  27        | TEXT

  28  compare : LESS
  29          | LEQ
  30          | GRTR
  31          | GEQ
  32          | EQUALS
  33          | NEQ

  34  mathop : ADD
  35         | SUB
  36         | MUL
  37         | DIV
  38         | MOD

  39  logicop : AND
  40          | OR

state 0
	$accept : . statements $end  (0)
	statement : .  (8)

	INTERO  shift 1
	REALE  shift 2
	CARATTERE  shift 3
	STRINGA  shift 4
	READ  shift 5
	WRITE  shift 6
	SE  shift 7
	MENTRE  shift 8
	ID  shift 9
	NEWLINE  reduce 8

	statements  goto 10
	statement  goto 11
	io  goto 12
	type  goto 13


state 1
	type : INTERO .  (20)

	.  reduce 20


state 2
	type : REALE .  (21)

	.  reduce 21


state 3
	type : CARATTERE .  (22)

	.  reduce 22


state 4
	type : STRINGA .  (23)

	.  reduce 23


state 5
	io : READ . RIGHT ID  (15)

	RIGHT  shift 14
	.  error


state 6
	io : WRITE . LEFT val  (16)

	LEFT  shift 15
	.  error


state 7
	statement : SE . conditions ALLORA LEFTBRKT NEWLINE statements RIGHTBRKT else  (7)

	ADD  shift 16
	SUB  shift 17
	MUL  shift 18
	DIV  shift 19
	MOD  shift 20
	ID  shift 21
	NUMINT  shift 22
	NUMDBL  shift 23
	CHAR  shift 24
	TEXT  shift 25
	.  error

	conditions  goto 26
	condition  goto 27
	mathop  goto 28
	val  goto 29
	value  goto 30
	operation  goto 31


state 8
	statement : MENTRE . conditions ALLORA LEFTBRKT NEWLINE statements RIGHTBRKT  (6)

	ADD  shift 16
	SUB  shift 17
	MUL  shift 18
	DIV  shift 19
	MOD  shift 20
	ID  shift 21
	NUMINT  shift 22
	NUMDBL  shift 23
	CHAR  shift 24
	TEXT  shift 25
	.  error

	conditions  goto 32
	condition  goto 27
	mathop  goto 28
	val  goto 29
	value  goto 30
	operation  goto 31


state 9
	statement : ID . LEFT val  (4)

	LEFT  shift 33
	.  error


state 10
	$accept : statements . $end  (0)

	$end  accept


state 11
	statements : statement . NEWLINE  (1)
	statements : statement . NEWLINE statements  (2)

	NEWLINE  shift 34
	.  error


state 12
	statement : io .  (5)

	.  reduce 5


state 13
	statement : type . ID  (3)

	ID  shift 35
	.  error


state 14
	io : READ RIGHT . ID  (15)

	ID  shift 36
	.  error


state 15
	io : WRITE LEFT . val  (16)

	ADD  shift 16
	SUB  shift 17
	MUL  shift 18
	DIV  shift 19
	MOD  shift 20
	ID  shift 21
	NUMINT  shift 22
	NUMDBL  shift 23
	CHAR  shift 24
	TEXT  shift 25
	.  error

	mathop  goto 28
	val  goto 37
	value  goto 30
	operation  goto 31


state 16
	mathop : ADD .  (34)

	.  reduce 34


state 17
	mathop : SUB .  (35)

	.  reduce 35


state 18
	mathop : MUL .  (36)

	.  reduce 36


state 19
	mathop : DIV .  (37)

	.  reduce 37


state 20
	mathop : MOD .  (38)

	.  reduce 38


state 21
	val : ID .  (17)

	.  reduce 17


state 22
	value : NUMINT .  (24)

	.  reduce 24


state 23
	value : NUMDBL .  (25)

	.  reduce 25


state 24
	value : CHAR .  (26)

	.  reduce 26


state 25
	value : TEXT .  (27)

	.  reduce 27


state 26
	statement : SE conditions . ALLORA LEFTBRKT NEWLINE statements RIGHTBRKT else  (7)

	ALLORA  shift 38
	.  error


state 27
	conditions : condition . logicop conditions  (11)
	conditions : condition .  (12)

	AND  shift 39
	OR  shift 40
	ALLORA  reduce 12

	logicop  goto 41


state 28
	operation : mathop . val val  (14)

	ADD  shift 16
	SUB  shift 17
	MUL  shift 18
	DIV  shift 19
	MOD  shift 20
	ID  shift 21
	NUMINT  shift 22
	NUMDBL  shift 23
	CHAR  shift 24
	TEXT  shift 25
	.  error

	mathop  goto 28
	val  goto 42
	value  goto 30
	operation  goto 31


state 29
	condition : val . compare val  (13)

	LESS  shift 43
	LEQ  shift 44
	GRTR  shift 45
	GEQ  shift 46
	NEQ  shift 47
	EQUALS  shift 48
	.  error

	compare  goto 49


state 30
	val : value .  (18)

	.  reduce 18


state 31
	val : operation .  (19)

	.  reduce 19


state 32
	statement : MENTRE conditions . ALLORA LEFTBRKT NEWLINE statements RIGHTBRKT  (6)

	ALLORA  shift 50
	.  error


state 33
	statement : ID LEFT . val  (4)

	ADD  shift 16
	SUB  shift 17
	MUL  shift 18
	DIV  shift 19
	MOD  shift 20
	ID  shift 21
	NUMINT  shift 22
	NUMDBL  shift 23
	CHAR  shift 24
	TEXT  shift 25
	.  error

	mathop  goto 28
	val  goto 51
	value  goto 30
	operation  goto 31


state 34
	statements : statement NEWLINE .  (1)
	statements : statement NEWLINE . statements  (2)
	statement : .  (8)

	INTERO  shift 1
	REALE  shift 2
	CARATTERE  shift 3
	STRINGA  shift 4
	READ  shift 5
	WRITE  shift 6
	SE  shift 7
	MENTRE  shift 8
	ID  shift 9
	$end  reduce 1
	RIGHTBRKT  reduce 1
	NEWLINE  reduce 8

	statements  goto 52
	statement  goto 11
	io  goto 12
	type  goto 13


state 35
	statement : type ID .  (3)

	.  reduce 3


state 36
	io : READ RIGHT ID .  (15)

	.  reduce 15


state 37
	io : WRITE LEFT val .  (16)

	.  reduce 16


state 38
	statement : SE conditions ALLORA . LEFTBRKT NEWLINE statements RIGHTBRKT else  (7)

	LEFTBRKT  shift 53
	.  error


state 39
	logicop : AND .  (39)

	.  reduce 39


state 40
	logicop : OR .  (40)

	.  reduce 40


state 41
	conditions : condition logicop . conditions  (11)

	ADD  shift 16
	SUB  shift 17
	MUL  shift 18
	DIV  shift 19
	MOD  shift 20
	ID  shift 21
	NUMINT  shift 22
	NUMDBL  shift 23
	CHAR  shift 24
	TEXT  shift 25
	.  error

	conditions  goto 54
	condition  goto 27
	mathop  goto 28
	val  goto 29
	value  goto 30
	operation  goto 31


state 42
	operation : mathop val . val  (14)

	ADD  shift 16
	SUB  shift 17
	MUL  shift 18
	DIV  shift 19
	MOD  shift 20
	ID  shift 21
	NUMINT  shift 22
	NUMDBL  shift 23
	CHAR  shift 24
	TEXT  shift 25
	.  error

	mathop  goto 28
	val  goto 55
	value  goto 30
	operation  goto 31


state 43
	compare : LESS .  (28)

	.  reduce 28


state 44
	compare : LEQ .  (29)

	.  reduce 29


state 45
	compare : GRTR .  (30)

	.  reduce 30


state 46
	compare : GEQ .  (31)

	.  reduce 31


state 47
	compare : NEQ .  (33)

	.  reduce 33


state 48
	compare : EQUALS .  (32)

	.  reduce 32


state 49
	condition : val compare . val  (13)

	ADD  shift 16
	SUB  shift 17
	MUL  shift 18
	DIV  shift 19
	MOD  shift 20
	ID  shift 21
	NUMINT  shift 22
	NUMDBL  shift 23
	CHAR  shift 24
	TEXT  shift 25
	.  error

	mathop  goto 28
	val  goto 56
	value  goto 30
	operation  goto 31


state 50
	statement : MENTRE conditions ALLORA . LEFTBRKT NEWLINE statements RIGHTBRKT  (6)

	LEFTBRKT  shift 57
	.  error


state 51
	statement : ID LEFT val .  (4)

	.  reduce 4


state 52
	statements : statement NEWLINE statements .  (2)

	.  reduce 2


state 53
	statement : SE conditions ALLORA LEFTBRKT . NEWLINE statements RIGHTBRKT else  (7)

	NEWLINE  shift 58
	.  error


state 54
	conditions : condition logicop conditions .  (11)

	.  reduce 11


state 55
	operation : mathop val val .  (14)

	.  reduce 14


state 56
	condition : val compare val .  (13)

	.  reduce 13


state 57
	statement : MENTRE conditions ALLORA LEFTBRKT . NEWLINE statements RIGHTBRKT  (6)

	NEWLINE  shift 59
	.  error


state 58
	statement : SE conditions ALLORA LEFTBRKT NEWLINE . statements RIGHTBRKT else  (7)
	statement : .  (8)

	INTERO  shift 1
	REALE  shift 2
	CARATTERE  shift 3
	STRINGA  shift 4
	READ  shift 5
	WRITE  shift 6
	SE  shift 7
	MENTRE  shift 8
	ID  shift 9
	NEWLINE  reduce 8

	statements  goto 60
	statement  goto 11
	io  goto 12
	type  goto 13


state 59
	statement : MENTRE conditions ALLORA LEFTBRKT NEWLINE . statements RIGHTBRKT  (6)
	statement : .  (8)

	INTERO  shift 1
	REALE  shift 2
	CARATTERE  shift 3
	STRINGA  shift 4
	READ  shift 5
	WRITE  shift 6
	SE  shift 7
	MENTRE  shift 8
	ID  shift 9
	NEWLINE  reduce 8

	statements  goto 61
	statement  goto 11
	io  goto 12
	type  goto 13


state 60
	statement : SE conditions ALLORA LEFTBRKT NEWLINE statements . RIGHTBRKT else  (7)

	RIGHTBRKT  shift 62
	.  error


state 61
	statement : MENTRE conditions ALLORA LEFTBRKT NEWLINE statements . RIGHTBRKT  (6)

	RIGHTBRKT  shift 63
	.  error


state 62
	statement : SE conditions ALLORA LEFTBRKT NEWLINE statements RIGHTBRKT . else  (7)
	else : .  (10)

	ALTRIMENTI  shift 64
	NEWLINE  reduce 10

	else  goto 65


state 63
	statement : MENTRE conditions ALLORA LEFTBRKT NEWLINE statements RIGHTBRKT .  (6)

	.  reduce 6


state 64
	else : ALTRIMENTI . LEFTBRKT NEWLINE statements RIGHTBRKT  (9)

	LEFTBRKT  shift 66
	.  error


state 65
	statement : SE conditions ALLORA LEFTBRKT NEWLINE statements RIGHTBRKT else .  (7)

	.  reduce 7


state 66
	else : ALTRIMENTI LEFTBRKT . NEWLINE statements RIGHTBRKT  (9)

	NEWLINE  shift 67
	.  error


state 67
	else : ALTRIMENTI LEFTBRKT NEWLINE . statements RIGHTBRKT  (9)
	statement : .  (8)

	INTERO  shift 1
	REALE  shift 2
	CARATTERE  shift 3
	STRINGA  shift 4
	READ  shift 5
	WRITE  shift 6
	SE  shift 7
	MENTRE  shift 8
	ID  shift 9
	NEWLINE  reduce 8

	statements  goto 68
	statement  goto 11
	io  goto 12
	type  goto 13


state 68
	else : ALTRIMENTI LEFTBRKT NEWLINE statements . RIGHTBRKT  (9)

	RIGHTBRKT  shift 69
	.  error


state 69
	else : ALTRIMENTI LEFTBRKT NEWLINE statements RIGHTBRKT .  (9)

	.  reduce 9


35 terminals, 14 nonterminals
41 grammar rules, 70 states

grammar parser grammar
symbol# value# symbol
     0      0  $end
     1    256  error
     2    257  INTERO
     3    258  REALE
     4    259  CARATTERE
     5    260  STRINGA
     6    261  READ
     7    262  WRITE
     8    263  LESS
     9    264  LEQ
    10    265  GRTR
    11    266  GEQ
    12    267  NEQ
    13    268  EQUALS
    14    269  ADD
    15    270  SUB
    16    271  MUL
    17    272  DIV
    18    273  MOD
    19    274  AND
    20    275  OR
    21    276  SE
    22    277  ALLORA
    23    278  ALTRIMENTI
    24    279  MENTRE
    25    280  LEFTBRKT
    26    281  RIGHTBRKT
    27    282  LEFT
    28    283  RIGHT
    29    284  ID
    30    285  NUMINT
    31    286  NUMDBL
    32    287  CHAR
    33    288  TEXT
    34    289  NEWLINE
    35    290  $accept
    36    291  statements
    37    292  statement
    38    293  else
    39    294  conditions
    40    295  condition
    41    296  io
    42    297  type
    43    298  compare
    44    299  mathop
    45    300  logicop
    46    301  val
    47    302  value
    48    303  operation
